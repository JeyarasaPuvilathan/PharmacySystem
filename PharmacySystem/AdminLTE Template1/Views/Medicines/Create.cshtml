@model AdminLTE_Template1.Models.MedicineDetail
<h2 class="bg-danger" style="text-align:center;color:red">@ViewData["Exception"]</h2>
@using (Html.BeginForm("create", "medicines", FormMethod.Post,
                                                   new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 style="color:brown;text-align:center"><b>Add New Medicine Detail</b></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.MedicineName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MedicineName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicineName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManufacturedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="ManufacturedDate" min="2017-01-01" type="date">
            </div>
            @Html.ValidationMessageFor(model => model.ManufacturedDate, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpiredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="ExpiredDate" min="2017-03-25" type="date">
            </div>
            @Html.ValidationMessageFor(model => model.ExpiredDate, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dosage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dosage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dosage, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Image,  new { @class = "form-control",@readonly=true, @Value = "~/content/img/medi2.jpg" })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <label class="col-md-2 control-label">Select File : </label>
            <div class="col-md-10">
                @Html.TextBox("file", null, new { type = "file", @class = "form-control", placeholder = "Enter Address", accept = "image/x-png, image/gif, image/jpeg" })
                @Html.ValidationMessage("FileErrorMessage")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                <input class="btn btn-primary" type="reset" value="Reset">
            </div>
        </div>
    </div>
}

@*<div class="btn btn-info">
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@



<style>
    /* Full-width input fields */
    input[type=text], input[type=password] {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        display: inline-block;
        border: 1px solid #ccc;
        box-sizing: border-box;
    }

    /* Set a style for all buttons */
    button {
        background-color: #4CAF50;
        color: white;
        padding: 14px 20px;
        margin: 8px 0;
        border: none;
        cursor: pointer;
        width: 100%;
    }

        button:hover {
            opacity: 0.8;
        }

    /* Extra styles for the cancel button */
    .cancelbtn {
        width: auto;
        padding: 10px 18px;
        background-color: #f44336;
    }

    /* Center the image and position the close button */
    /*.imgcontainer {
        text-align: center;
        margin: 24px 0 12px 0;
        position: relative;
    }

    img.avatar {
        width: 40%;
        border-radius: 50%;
    }*/

    .container {
        padding: 16px;
        width: 500px;
    }

    span.psw {
        float: right;
        padding-top: 16px;
    }

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 100px;
        top: 50px;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        padding-top: 60px;
    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
    }

    /* The Close Button (x) */
    .close {
        position: absolute;
        right: 25px;
        top: 0;
        color: #000;
        font-size: 35px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: red;
            cursor: pointer;
        }

    /* Add Zoom Animation */
    .animate {
        -webkit-animation: animatezoom 0.6s;
        animation: animatezoom 0.6s;
    }
</style>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6" style="background-color:lavender;">
                <h2>Add New Category Diseases</h2>

                <button onclick="document.getElementById('id01').style.display='block'" style="width:auto;">ADD</button>
            </div>
            <div class="col-sm-6" style="background-color:lavender;">
                <h2>Delete Category Diseases</h2>
                <input type="button" class="btn-danger" style="width:70px;height:50px;display:block" value="Delete" onclick="location.href='@Url.Action("Index", "CategoryDiseases") '" />
            </div>
        </div>
    </div>
    <div id="id01" class="modal">


        @using (Html.BeginForm("create", "CategoryDiseases"))
            {
            @Html.AntiForgeryToken()

            @*<div class="imgcontainer">
                    <span onclick="document.getElementById('id01').style.display='none'" class="close" title="Close Modal">&times;</span>
                    <img src="img_avatar2.png" alt="Avatar" class="avatar">
                </div>*@

            <div class="container">
                <label><b>Category Disease</b></label>
                <input type="text" placeholder="Enter Category Disease Name" name="CategoryName" required>

                @*<label><b>Password</b></label>
                        <input type="password" placeholder="Enter Password" name="psw" required>


                        <input type="checkbox" checked="checked"> Remember me
                    </div>*@
                <button type="submit">Add</button>
                @*<div class="container" style="background-color:#f1f1f1">
                        <button type="button" onclick="document.getElementById('id01').style.display='none'" class="cancelbtn">Cancel</button>
                        <span class="psw">Forgot <a href="#">password?</a></span>
                    </div>*@
            </div>
        }
    </div>

    <script>
        // Get the modal
        var modal = document.getElementById('id01');

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    </script>

</body>
